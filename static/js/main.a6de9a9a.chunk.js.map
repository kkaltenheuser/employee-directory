{"version":3,"sources":["components/nav/index.js","components/EmployeeTable/index.js","components/SearchForm/SearchForm.js","components/SortButtons/SortButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","EmployeeTable","props","useState","console","log","userMap","users","map","el","index","CardGroup","style","marginTop","image","picture","large","first","name","last","title","Card","Img","variant","src","width","height","display","margin","Body","Title","Text","Footer","SearchForm","htmlFor","value","search","onChange","handleInputChange","list","type","placeholder","id","SortButtons","Button","onClick","setSortByLastName","setSortByTitle","App","setUsers","filteredUsers","setFilteredUsers","sortByLastName","sortByTitle","useEffect","axios","get","then","response","data","results","allUsers","filter","user","indexOf","sort","a","b","event","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6de9a9a.chunk.js","sourcesContent":["// dependencies\nimport React from \"react\";\nimport \"./style.css\";\n\n// nav var\nconst Nav =() => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\n      <div className=\"navbar-brand\">\n        *Insert Generic Company Name*\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;","// dependencies\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button, CardGroup } from \"react-bootstrap\";\nimport \"./style.css\";\n// table var\nconst EmployeeTable = (props) => {\n  const [users, setUsers] = useState([]);\n\n  // useEffect(() => {\n  //   axios.get(`https://randomuser.me/api/?results=20`).then((response) => {\n  //     setUsers(response.data.results);\n  //   });\n  // }, []);\n// log var tile\n  const Tile = ({ first, last, title, location, phone }) => {\n    return (\n      <div className=\"App\">\n        <h1>{`${title} ${first} ${last}`}</h1>\n      </div>\n    );\n  };\n// log props\n  console.log(props);\n  const userMap = props.users.map(function (el, index) {\n    return (\n      <CardGroup\n        style={{\n          marginTop: \"1rem\",\n        }}\n        key={index}\n        image={el.picture.large}\n        first={el.name.first}\n        last={el.name.last}\n        title={el.name.title}\n      >\n        <Card>\n          <Card.Img\n            variant=\"top\"\n            src={el.picture.large}\n            style={{\n              width: \"15rem\",\n              height: \"15rem\",\n              display: \"block\",\n              margin: \"auto\",\n              marginTop: \"2rem\",\n            }}\n          />\n          <Card.Body>\n            <Card.Title>\n              {el.name.title} {el.name.first} {el.name.last}\n            </Card.Title>\n            <Card.Text>\n              This is {el.name.first}'s employee card, they are are engineer at\n              *insert name*.\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\n          </Card.Footer>\n        </Card>\n      </CardGroup>\n    );\n  });\n\n  return <div>{userMap}</div>;\n};\n\nexport default EmployeeTable;","// dependencies \nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\n// var form \nconst SearchForm = (props) => {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"language\"> Search Employee Directory:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"term\"\n          list=\"term\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type the name of the employee you are seeking to search within the directory\"\n          id=\"term\"\n        />\n      </div>\n    </form>\n  );\n};\nexport default SearchForm;","import React from \"react\";\nimport \"./style.css\";\nimport { Button } from \"react-bootstrap\";\n\n// import { useBoolean } from \"react-hanger\" (installed in package.json)\n\n\nconst SortButtons = (props) => {\n    // const [users, setUsers] = useState([]);\n    // console.log (props)\n    // const sortedNames = props.sort()\n    // console.log (sortedNames)\n    // const sortNames = useBoolean(false)\n    // const sorted = props.users.sort((a, b) => {}\n        // return b.props.user.name.last - a.props.user.name.last;\n    //   ); \n\n// on click return series\nreturn(\n    <div>\n    <Button variant=\"success\" onClick={()=>{\n        props.setSortByLastName(true)\n    }} > Sort via last name </Button>\n\n<Button variant=\"success\" onClick={()=>{\n        props.setSortByTitle(true)\n    }} > Sort via title </Button>\n\n    <div>\n\n    </div>\n\n    </div>\n    );\n}\n\nexport default SortButtons;","// import all dependencies + route files\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/nav\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport SearchForm from \"./components/SearchForm/SearchForm\";\nimport axios from \"axios\";\nimport SortButtons from \"./components/SortButtons/SortButtons\";\n// set all variables for app\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState(null);\n  const [sortByLastName, setSortByLastName] = useState(false);\n  const [sortByTitle, setSortByTitle] = useState(false);\n\n// pull from randomizer user api\n  useEffect(() => {\n    axios.get(`https://randomuser.me/api/?results=20`).then((response) => {\n      setUsers(response.data.results);\n    });\n  }, []);\n\n  const handleInputChange = (event) => {\n\n    setFilteredUsers(event.target.value);\n\n  };\n// sort all users\nlet allUsers = users\n\nif (filteredUsers != null) {\n  allUsers = users.filter((user) => {\n    return (user.name.title + \" \" + user.name.first + \" \" + user.name.last).indexOf(filteredUsers) >= 0;\n  });\n  console.log()\n}\n\nif (sortByLastName === true) {\n  allUsers = allUsers.sort((a,b) => {\n    console.log(a,b)\n    return (a.name.last> b.name.last) ? 1 : ((b.name.last > a.name.last) ? -1 : 0)}); \n}\n\nif (sortByTitle === true) {\n  allUsers = allUsers.sort((a,b) => {\n    console.log(a,b)\n    return (a.name.title> b.name.title) ? 1 : ((b.name.title > a.name.title) ? -1 : 0)}); \n}\n  return (\n    <div className=\"App\">\n      <Nav />\n      <SearchForm handleInputChange={handleInputChange} />\n      <SortButtons setSortByLastName={setSortByLastName} setSortByTitle={setSortByTitle}/>\n      <EmployeeTable users={allUsers}/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}